# Refactoring Tasks

## 1. Remove Mock Routes and Consolidate Mock Functionality
- [ ] Remove `/mock` and `/mock-data.js` routes from `server.py`
- [ ] Remove `/mock` and `/mock-data.js` routes from `review_manager.py:create_dynamic_router()`
- [ ] Remove `mock.html` and `mock-data.js` files if they exist
- [ ] Ensure mock functionality is fully handled by the `mock` parameter in `/api/diff` endpoints
- [ ] Update any documentation or tests that reference the removed mock routes

## 2. API Response Consistency
- [ ] Create `src/loopback/responses.py` with standardized response models
- [ ] Define `SuccessResponse`, `ErrorResponse`, and `CommentResponse` models
- [ ] Update all API endpoints to return consistent response formats
- [ ] Replace dict returns with proper response models
- [ ] Ensure all endpoints have proper response model type hints

## 3. Type Hint Improvements
- [ ] Add missing return type hints for async functions across all modules
- [ ] Convert `Optional[X]` to `X | None` syntax (Python 3.10+)
- [ ] Add type hints to function parameters that are missing them
- [ ] Ensure all class methods have proper type hints
- [ ] Run mypy to verify type correctness after changes

## 4. Simplify Event Management with asyncio.Queue
- [ ] Replace `_pending_comments: List[Comment]` with `asyncio.Queue[Comment]`
- [ ] Remove manual thread-safe event loop callbacks in `ReviewManager`
- [ ] Refactor `add_comment_to_queue()` to use queue.put()
- [ ] Refactor `await_comments()` to use queue.get() with timeout
- [ ] Simplify the event notification system between FastAPI and MCP threads

## 5. Improve Error Handling
- [ ] Create `src/loopback/exceptions.py` with custom exception classes
- [ ] Define exceptions: `ReviewNotFoundError`, `CommentNotFoundError`, `GitOperationError`
- [ ] Create centralized error handler middleware in `src/loopback/middleware.py`
- [ ] Update all modules to use custom exceptions instead of generic HTTPException
- [ ] Ensure consistent error response format across all endpoints